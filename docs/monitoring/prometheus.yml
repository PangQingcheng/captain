groups:
- name: node.rules
  rules:
  # cluster cpu
  - expr: sum by(cpu, instance, job, namespace, pod) (node_cpu_seconds_total{job="node-exporter",mode=~"user|nice|system|iowait|irq|softirq"})
    record: node_cpu_used_seconds_total
  - expr: avg(irate(node_cpu_used_seconds_total{job="node-exporter"}[5m]))
    record: :node_cpu_utilisation:avg1m
  # cluster mem
  - expr: '1 - sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"}) / sum(node_memory_MemTotal_bytes{job="node-exporter"})'
    record: ':node_memory_utilisation:'
  - expr: 'sum by(node, host_ip, role) ((node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"}) * on(namespace, pod) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)'
    record: 'node:node_memory_bytes_available:sum'
  - expr: 'sum by(node, host_ip, role) (node_memory_MemTotal_bytes{job="node-exporter"} * on(namespace, pod) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)'
    record: 'node:node_memory_bytes_total:sum'
  # cluster disk
  - expr: '1 - sum(max by(device, instance) (node_filesystem_avail_bytes{device!~"/dev/loop\\d+",device=~"/dev/.*",job="node-exporter"})) / sum(max by(device, instance) (node_filesystem_size_bytes{device!~"/dev/loop\\d+",device=~"/dev/.*",job="node-exporter"}))'
    record: cluster:disk_utilization:ratio
  # node cpu
  - expr: 'avg by(node, host_ip, role) (irate(node_cpu_used_seconds_total{job="node-exporter"}[5m]) * on(namespace, pod) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)'
    record: node:node_cpu_utilisation:avg1m
  - expr: 'count by(node, host_ip, role) (sum by(node, cpu, host_ip, role) (node_cpu_seconds_total{job="node-exporter"} * on(namespace, pod) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:))'
    record: node:node_num_cpu:sum
  # node mem
  - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
    record: 'node:node_memory_utilisation:'
  - expr: 'sum by(node, host_ip, role) ((kube_pod_status_scheduled{condition="true",job="kube-state-metrics"} > 0) * on(namespace, pod) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)'
    record: node:pod_count:sum
  # workload cpu
  - expr: 'sum by(namespace, workload, owner_kind) (label_replace(label_join(sum by(namespace, pod) (irate(container_cpu_usage_seconds_total{image!="",job="kubelet",pod!=""}[5m])) * on(pod, namespace) group_left(owner_kind, owner_name) label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"}, "owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"), "tmp", ":", "owner_name", "pod"), "owner_name", "$1", "tmp", "<none>:(.*)"), "workload", ":", "owner_kind", "owner_name"), "workload", "$1", "workload", "(Deployment:.+)-(.+)"))'
    record: namespace:workload_cpu_usage:sum
  # workload mem
  - expr: 'sum by(namespace, workload, owner_kind) (label_replace(label_join(sum by(namespace, pod) (container_memory_usage_bytes{image!="",job="kubelet",pod!=""}) * on(pod, namespace) group_left(owner_kind, owner_name) label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"}, "owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"), "tmp", ":", "owner_name", "pod"), "owner_name", "$1", "tmp", "<none>:(.*)"), "workload", ":", "owner_kind", "owner_name"), "workload", "$1", "workload", "(Deployment:.+)-(.+)"))'
    record: namespace:workload_memory_usage:sum
  - expr: 'sum by(namespace, workload, owner_kind) (label_replace(label_join(sum by(namespace, pod) (container_memory_working_set_bytes{image!="",job="kubelet",pod!=""}) * on(pod, namespace) group_left(owner_kind, owner_name) label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"}, "owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"), "tmp", ":", "owner_name", "pod"), "owner_name", "$1", "tmp", "<none>:(.*)"), "workload", ":", "owner_kind", "owner_name"), "workload", "$1", "workload", "(Deployment:.+)-(.+)"))'
    record: namespace:workload_memory_usage_wo_cache:sum
  # workload net  
  - expr: 'sum by(namespace, workload, owner_kind) (label_replace(label_join(sum by(namespace, pod) (irate(container_network_transmit_bytes_total{interface!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)",job="kubelet",pod!=""}[5m])) * on(pod, namespace) group_left(owner_kind, owner_name) label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"}, "owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"), "tmp", ":", "owner_name", "pod"), "owner_name", "$1", "tmp", "<none>:(.*)"), "workload", ":", "owner_kind", "owner_name"), "workload", "$1", "workload", "(Deployment:.+)-(.+)"))'
    record: namespace:workload_net_bytes_transmitted:sum_irate
  - expr: 'sum by(namespace, workload, owner_kind) (label_replace(label_join(sum by(namespace, pod) (irate(container_network_receive_bytes_total{interface!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)",job="kubelet",pod!=""}[5m])) * on(pod, namespace) group_left(owner_kind, owner_name) label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"}, "owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"), "tmp", ":", "owner_name", "pod"), "owner_name", "$1", "tmp", "<none>:(.*)"), "workload", ":", "owner_kind", "owner_name"), "workload", "$1", "workload", "(Deployment:.+)-(.+)"))'
    record: namespace:workload_net_bytes_received:sum_irate
  # workload num
  - expr: 'label_replace(label_replace(sum by(deployment, namespace) (kube_deployment_status_replicas_unavailable{job="kube-state-metrics"}) / sum by(deployment, namespace) (kube_deployment_spec_replicas{job="kube-state-metrics"}) * on(namespace) group_left(workspace) (kube_namespace_labels{job="kube-state-metrics"}), "workload", "Deployment:$1", "deployment", "(.*)"), "owner_kind", "Deployment", "", "")'
    record: namespace:deployment_unavailable_replicas:ratio
  - expr: 'label_replace(label_replace(sum by(daemonset, namespace) (kube_daemonset_status_number_unavailable{job="kube-state-metrics"}) / sum by(daemonset, namespace) (kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}) * on(namespace) group_left(workspace) (kube_namespace_labels{job="kube-state-metrics"}), "workload", "DaemonSet:$1", "daemonset", "(.*)"), "owner_kind", "DaemonSet", "", "")'
    record: namespace:daemonset_unavailable_replicas:ratio
  - expr: 'label_replace(label_replace((1 - sum by(statefulset, namespace) (kube_statefulset_status_replicas_current{job="kube-state-metrics"}) / sum by(statefulset, namespace) (kube_statefulset_replicas{job="kube-state-metrics"})) * on(namespace) group_left(workspace) (kube_namespace_labels{job="kube-state-metrics"}), "workload", "StatefulSet:$1", "statefulset", "(.*)"), "owner_kind", "StatefulSet", "", "")'
    record: namespace:statefulset_unavailable_replicas:ratio